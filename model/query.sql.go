// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package model

import (
	"context"
)

const storeJobResult = `-- name: StoreJobResult :one
INSERT INTO job_results (
  id, time
) VALUES (
  ?, ?
)
RETURNING id, time
`

type StoreJobResultParams struct {
	ID   interface{}
	Time string
}

func (q *Queries) StoreJobResult(ctx context.Context, arg StoreJobResultParams) (JobResult, error) {
	row := q.db.QueryRowContext(ctx, storeJobResult, arg.ID, arg.Time)
	var i JobResult
	err := row.Scan(&i.ID, &i.Time)
	return i, err
}

const storeScheduledJob = `-- name: StoreScheduledJob :one
INSERT INTO scheduled_job (
  id, time
) VALUES (
  ?, ?
)
RETURNING id, time
`

type StoreScheduledJobParams struct {
	ID   interface{}
	Time string
}

func (q *Queries) StoreScheduledJob(ctx context.Context, arg StoreScheduledJobParams) (ScheduledJob, error) {
	row := q.db.QueryRowContext(ctx, storeScheduledJob, arg.ID, arg.Time)
	var i ScheduledJob
	err := row.Scan(&i.ID, &i.Time)
	return i, err
}
